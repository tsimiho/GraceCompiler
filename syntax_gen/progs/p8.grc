fun z(baz, f : int[22]; m, j, j : char[23][1]; ref d : int[][12]) : char
fun e(m, k : char[20]; ref j : char[][6]; bar, foo : int; c : int[][37]) : char
fun f(ref d : char) : char
fun a(ref x : int; ref c, a : char[35]) : int
fun m(ref x : int[]; m, boo, e : char[][41]; n : char[32]; ref boo, g : int[][35]; ref x : char[]) : nothing
fun boo(baz, m, j : int) : nothing
var baz : char[30][40];

{
  if 10 > '\n' then ; else if 'a' > 12 then foo(10, 'a', 35);
  {
  return;
  m['7'] <- x((35 mod 24), d(), (20));
  k();
  ;
}
  if '\'' < 26 then if 'a' = 30 then {
  {
  main <- c(x(foo, b[31]), x);
  {
  {

}
}
  {

}
  return;
}
  if 'a' <= '\'' then i(baz['\n'][13], main(d, ('\''), + 'a'));
  return j((29 mod 27), (20 - 20));
  if '7' < 2 then ;
  f <- c;
}
}


{
  return;
  b();
  return ('\'');
}


{
  ;
  while '7' # 42 do bar(+ 38, l);
  while 5 > 26 do ;
}

var m, b, x : int;
fun j(ref e, foo : int[]; c, m : char[41]; ref i, h, baz : char[23]; k, m : char[][7][30]; m : char) : nothing
fun k() : nothing
fun foo(k, x, c : int[][17]; n, f, foo : int[][34]; ref main, baz : char[][19]; h, main, bar : char[][41]; f, z, z : int) : char
fun c(ref boo, boo, main : char; ref h, bar : int[]; ref m, k : char[][40]; ref e, n : char[26]; ref m, bar, j : int) : nothing
fun h(ref h, l, x : char[]) : int

{
  i();
  return bar();
  return;
}

fun main(bar, baz : int; ref l : int[8]; ref b : char; l : int) : char

{
  a <- l(+ 34);
  j <- (31);
  return (34 * '\n');
  return - '7';
}

fun i(ref f, z, j : int[]; y, m : int[]; ref f, bar : int[37]; ref x, k : int) : int
fun main() : nothing;
fun e(ref f : char; l, m, j : int[]) : int
var n : char;

{
  if 10 = '\'' then ;
  {
  return bar(+ '7');
  {
  while 34 <= 24 do while 15 >= 'a' do main <- 13;
  if 'a' = 25 then b(c(+ 31), - 4, - '7'); else if 15 > '\n' then m <- '\''; else if '7' # 42 then ;
  return;
  ;
}
  if '\'' < 40 then if '7' > 8 then if 'a' = 18 then ; else ; else {

}
}
}

fun baz(ref boo, m : int[2]; d, bar : char; ref h, b : int; ref m, baz : int[12]; k, f : int[]) : nothing
var main : char[26];
var z, g, main : char;
var baz, g : int[32][7];

{
  {

}
  while 5 # 38 do return;
}


{

}


{
  return foo;
  x(h(+ (h()), h(c(((('\n' + 25)) mod (+ 'a')), n[(20)])), (+ '\n')), - (((18 div 24))));
  return foo;
  ;
}


{
  boo((('\'' div '7')), ((- 37) - "Name:\t\"DouglasAdams\"\nValue:\t42\n"));
  main(bar, - ((- 22)), x(((- 'a') * (('\''))), ((k()) + (x()))));
}

fun j(b, y, foo : int[]; f, f : char[]; d, k, h : char[][2][17]; j : char[][24]; l : char[][11][39]) : char
var m, b, m : char[23][37];
fun i() : nothing
fun main() : nothing;

{
  ;
}

fun h(m : char[22]; h, foo : int[][21]; foo : int) : nothing
fun c(ref baz, main, c : char[4][9]; d, bar, main : char[]; ref boo, bar, m : int[40]; ref c, n, main : int) : int;

{
  if 10 <= 41 then f <- 34;
  {
  return baz(y(- '7'), - 'a');
}
  while 26 < 42 do while '\n' # 24 do d <- 1;
  ;
  return ('7');
}


{
  y((('\'')), e[(30)], n);
  while 19 # 13 do if 'a' <= 'a' then if '\n' = '\n' then {

} else ; else while '7' > '7' do m('\n');
  return;
  g <- + 30;
  {
  while '\n' < 'a' do if '\n' < '\'' then x <- 9;
  ;
  while '\'' = 15 do boo(bar(a(c(c(), ('a' div '\''), ('\n')), ('\'' - 7)), (30 - 24), (42 * 17)), main(- 40, b(('a'), + 33, - '\'')), - '7');
}
}


{
  j(y[+ 'a'], bar(), f(e((+ 8), + (((z()) div h)), n), ((('7')) mod (('\'' mod 26))), "foo"));
}

fun f() : int
fun e(ref bar, baz, z : char[][2]) : char
fun baz(bar, a, foo : int; a, baz, f : char; h, i : char[7][5]; k, foo, foo : char[]) : nothing;
fun m(ref k : int[19]) : nothing;
fun x(ref d, y, c : char; l, x, c : int[][17][13]; ref j, m, d : char[]; ref bar, g : int[][32]; g, d, m : char[28]) : nothing

{
  ;
  e();
}


{
  g((('\'')));
  "bar" <- - 39;
}


{
  {
  return;
  ;
  {
  foo();
  foo(z);
  if 42 = '\'' then return 38; else ;
  {
  while 35 < '\'' do return 0;
  m['a']['a'][8] <- (36);
  while 30 < 1 do h(y(), z, d());
  {
  while 28 = 28 do l((28 - '7'));
  return;
  while 'a' = 'a' do return 11;
  if '\'' > 'a' then return; else m(boo(e, (29), ('a' + 'a')), (21));
  b <- + 21;
}
  ;
}
  ;
}
  n((d), + (- (x(i, d))), (b));
}
  b <- - '\n';
  ;
}

fun j(g, a : char[30]; g, m, l : char[][9]) : nothing
fun z(l : char; ref baz : char[17]; y : char[]) : nothing
fun b(m : char[]; e, main : int[]; baz, boo : int[]; baz, bar : char[][24]) : int;

{

}

fun c(e, baz, m : int[]; ref g : char[]) : int
fun bar(ref c, f : char; ref x : int[41]; ref baz, b, k : int; bar, baz, c : char; ref d, n : char[17]) : int
fun j(c, l : char) : char

{

}

fun bar() : nothing
fun y(ref main, baz, h : int[][5]; ref bar, l : int[][22]; ref d : int; ref l, l, m : int[]) : int

{
  while 4 > 'a' do baz(- '\n');
  while '7' >= 33 do l <- '7';
  ;
  i((l), l, (('a')));
}


{
  {
  d(((bar(z, (1), h((28)))) * l), - (m(- (('\n' mod 9)), h, z(x(boo(y(- ((33)), ("Name:\t\"DouglasAdams\"\nValue:\t42\n"), "Route66")), - (f()), h(y, - ((17 div 'a'))))))));
  main <- foo;
  {
  if 'a' >= 26 then x(i()); else {
  ;
  {

}
  ;
  if 'a' # 24 then bar['\n'] <- 9; else if '7' # '7' then z();
}
  m <- ('\n' div 8);
  {

}
  "Route66" <- (2 + 26);
}
}
  return;
  {
  g <- a(('\n' * '7'), + '7');
  return;
  return;
  {
  return;
}
  if 17 # '7' then while 5 < 30 do while 10 = 13 do while 'a' <= 37 do while 3 < '\n' do d(40, 16); else ;
}
}

var b, x, h : char;

{
  while '\'' = '\n' do ;
  if 17 > '\'' then while 4 # 40 do if 'a' < 10 then ; else d <- '7';
  {
  if '7' = '\'' then while 34 > '\'' do {
  return;
  {
  f(((29)), foo(k(), (main(b))));
  x((+ 14), ((x(- 22)) mod (m((33), g(), ('\'' * 10)))));
  ;
  return k(main(), h[16][31]);
}
}
  j(("Name:\t\"DouglasAdams\"\nValue:\t42\n"), ((foo[36]) * (('\'' mod '\''))), boo(((- 19) div (('a' div 37)))));
  {
  i();
  while '\n' > 38 do return '\n';
}
}
  baz <- y(+ 14, ('\n'));
  while 5 # 29 do {
  j(((+ '7') mod (z())));
  "bar" <- (30);
}
}

var g, i, z : char[39][41];

{
  foo(+ (+ (f(l))));
  baz['a'] <- ('7');
  if '7' = '\'' then ;
  k <- + 35;
  n(((('a')) + j), ((('a')) mod (('a' div '\''))), ((('a' mod 40)) - (b((16)))));
}

fun m(ref l, n : int; b : char; i, x, f : char[]; ref l, k : char[7]; ref k : char[][6]) : nothing
fun j(ref f, k, n : int[][7]; i, d : char; k, e, k : int) : nothing;
var z, d : char;
fun g(ref f, foo : int; e, bar, c : char[35]) : nothing
fun b(ref f, y : int[]; baz, l, z : char; ref k, x, j : char) : int;
fun l(z : char; ref g, baz, m : char[]; ref x, n, l : char[]; ref a : int[][3]; ref m, m : char) : int

{
  ;
  return;
  if 34 <= 21 then ;
  bar <- (6 div 'a');
}

fun k(x, n : char[]; ref f, n, y : char[]; ref j, n, n : int) : nothing;

{
  f <- (0 mod 'a');
}


{
  ;
  if 4 > '\n' then y(('\n' - 'a')); else ;
  k();
}


{

}


{
  {
  if 41 >= 21 then if '7' > 11 then while 22 >= '7' do return; else ;
  {

}
  a <- boo;
}
  {

}
}


{
  if '\'' >= '\n' then l(- 42, ('a' * 0), (5 + 31));
  y((('7')), l());
  c <- ('\'');
  ;
}


{
  while 40 <= 10 do g <- '\'';
  l();
  return j((28 * 18));
  while '\'' # '7' do return;
  if '7' > 11 then {

} else return;
}


{
  ;
  {
  {
  if '\n' = '\n' then {
  {
  if '\'' # 5 then {
  if 'a' # '7' then while '\'' <= 26 do if 'a' < 39 then while 14 = 'a' do return '7'; else if '\n' > '\'' then ; else return '\'';
  if 35 <= 'a' then ;
  if '\n' # 22 then {
  if '\'' >= 'a' then a <- 41;
  {
  return + 'a';
}
}
  if 17 # 40 then c[31] <- 20; else while '7' = 'a' do if '7' > 29 then {
  return;
  b[33] <- ('a' + 11);
  {
  baz <- z((18 mod 33), a, baz);
  y <- ('\n' mod '\n');
  h("Route66", g(i(- (- (('7' + 22)))), "bar"), k);
  while 16 >= 41 do if 17 = '7' then ; else baz(5, 37);
}
}
} else while 16 = '\'' do m(18, '\n');
  while '\n' = 0 do if 11 # '\n' then main <- 14;
}
  while 10 >= 33 do a(m(n((0), h, ('7')), f(+ 'a')), (34 - '\n'), bar(bar((12 mod '7'), x(('a'), (11 * '7'), - 'a')), k()));
}
  return;
}
  return f;
}
  boo();
  j();
}
