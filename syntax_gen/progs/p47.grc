fun c(a, l : char[]; ref m, y, baz : int[9][6]; bar, baz, baz : int[]) : nothing
fun baz(ref foo, baz : int[42]; z, foo : int[36]; ref x, k, f : char[37][32]; ref h, z, j : int[5][36]) : nothing;
fun l(ref g, bar : char[35][30]; ref g, z : int[]; f, l, baz : char[21]; ref y, n : int; ref n : int) : int
fun main() : int;
fun j(y : char[]) : int
fun boo(ref n : char[14]; ref l, c, a : int[13]; ref m : char[]; ref x, e : char; ref m : char[][16][30]) : nothing
fun main(main, l, a : int[]; ref j : char[36]; g : int[23]; i, main, a : char[26]) : nothing
fun i(x : int[40][0]; ref main, a, z : int[][36]) : nothing
fun boo() : int;
fun foo() : int

{
  if '\n' > 7 then return 'a'; else {
  baz(foo[34][(35)], baz, ((('\n' + 'a')) mod c));
  if '\'' > 17 then if 41 <= 39 then ; else boo(c((33), foo), n['7'], z);
  return e(a(- 'a'));
  return (29 mod 30);
}
  d();
}


{

}

fun a() : int
fun foo(l, h : char[]) : nothing
fun d(i : int[][24]; d, bar : int[][10]; g, f : char; x, b : char[17]; boo, x, m : char[17]) : int
fun main(ref g, j, f : char[]; ref d : int[20]; a : int; k, i : int; ref d : int) : nothing

{

}


{
  return;
  k <- x();
  while 'a' # 'a' do ;
  if 41 > '\'' then k <- '\''; else y(('\''), (40), j((1 * '7'), - 'a'));
  ;
}

fun j(ref h, boo, main : int; ref c : int[]) : nothing
fun bar(ref g : char[24]) : nothing
fun a(l, e, a : char[]; ref d : char[]; ref c : int[][37]; ref f, l : int[][1]; c, g : char[][27]) : nothing
fun z(k, e : char) : nothing

{
  return ('\n');
  ;
}

fun b(c : int; d : char[]; ref n : int; b, e : int) : char

{
  if '\n' < '\n' then m <- '\'';
  if 22 = 22 then if 19 = 6 then x(25, 30, '7'); else {
  ;
}
  {
  {
  while 'a' = '\n' do z <- 20;
  d <- (11 - '\n');
  g(j, ((h((32 * 19))) - ((37 - 35))), (('7' mod '7')));
  l(((y(baz(), l())) + "bar"), h, d);
  ;
}
  ;
  while 31 < 'a' do boo <- 23;
  y(main, ((c(x, (34))) mod (+ 33)));
}
  b(((d(f((11 - '7'), (7 - 18)), ('\''))) - (('\''))));
}

var y : char;

{
  n((i()), j((+ 5), (+ 42)));
  {
  while 25 >= 'a' do bar <- 30;
  ;
}
}

var x, bar, b : int[1][19];
var x, n, foo : char;

{
  {
  return l;
  {
  b(b(), (((20 * '\'')) + ((30 div '\''))), (('7' - '7')));
  if '\'' < 22 then ;
}
}
  boo((e), ((('a')) - bar), (z));
  while 8 <= '\n' do {

}
  return;
}

fun h(ref y, boo, h : char; ref e, x : char[]) : nothing;

{
  {
  return h(baz[4]['7'], foo(+ 29, ('a' - '\'')));
}
  a <- + 'a';
  return;
}

fun k(ref z : char[][14]; e, d, k : int[37]; d, i : char[]; j, foo, a : char[][27]) : nothing;

{

}

fun g(k, l : char[][12][22]) : char
fun h(ref a : char; d : int[36]) : nothing
fun i(b, z, f : char; ref e, h, l : char[]; ref d, y : char; ref k, baz : char) : int
fun b(e, y : int[]; ref d : int[][32]) : nothing
fun n() : nothing;
fun baz(d, j : int; ref n, j : int) : int;
fun y(i : char[35]; ref c, g, e : char) : int
fun baz(ref a, b, g : int[]; ref d, x : char; l, f : int; h, j : char[][21]) : char
fun d(ref g, m, main : char[][15][16]; z, z : int[24]; j, k, j : char[][9]; g, bar, j : int[]; c, i : int[][30]) : char
fun g(bar, f, j : int) : nothing;
fun x() : nothing
fun a() : char

{
  return (19 + 10);
  if 30 >= '7' then while 7 = 'a' do j('\'');
  "foo" <- + 36;
}


{
  return (11);
  if '\n' > 'a' then l <- 39;
}

fun j(ref a : char; ref h : char[]) : int
var y, j, bar : char;
fun z(bar, j : int; ref x, i : int[][14][22]; ref n, foo : int[11]) : int
fun a() : nothing

{
  if 22 >= '\'' then {
  if '7' < 'a' then {
  {
  return baz;
  return;
  n(((i['\n']) + ((23 * 37))), baz());
  ;
}
  if 32 # '\'' then i <- 18;
  foo();
  ;
} else b(boo);
  l <- boo();
  f();
  ;
} else while 13 # '\n' do {
  ;
}
}

fun bar(ref z, h, k : char[]; ref x, c : int[]; y, baz : char) : char
fun z() : int
fun f() : nothing;
fun d(ref x : char[][41]; d, h, j : int; x : char[]) : int
fun d(z, e, x : int[]; m : char; z : char[]; ref j, f : char[][35]) : int;
fun baz(ref b : char[42][24]; boo, a : int[][3][1]; l : int; ref c : int) : nothing

{
  while 6 < '7' do while 40 > 32 do ;
  baz(m(), (c['a']), (((17 + 0)) - y));
}

fun c(k, h : int[26]) : char;

{
  ;
  while 10 <= '\n' do {
  return;
  ;
  bar(((h()) - (('\n'))));
  if 'a' <= 35 then return;
  while '\n' > '\n' do return;
}
  a <- (13);
}

fun i(g : int[8]; n : int; ref l, a : char; ref c : int[16]) : nothing;

{
  while 27 >= 11 do if '\'' > 6 then boo(); else return 32;
  {
  return ('7' - '\'');
  while 5 <= 33 do if '\n' = 34 then ;
}
  {
  h['\n'] <- y;
  i['\n'] <- ('\n' - 1);
  "Route66" <- ('a' * 11);
  {
  {

}
}
  a <- ('\n' - 10);
}
}

fun j(main, b : int[]; main, n : int[29][16]; ref d : char[]; ref i, d, bar : int) : int
fun b(m, h, e : int; z, g : int[14][4]) : char;
fun m(ref z : int; k, z, a : int[][19]; ref e, y, f : char; ref a, f, g : int[][22]; m, n : int[]) : nothing;

{
  if 34 <= 'a' then while 42 > 10 do if 25 = 1 then {
  if '\'' # 'a' then {
  if '\'' # 6 then {
  h((h((42), i("Route66"['\n']['\''], ('a'), i))));
  a();
}
  while '\'' >= 27 do return 38;
  while 'a' = '\'' do return;
} else if 34 < '7' then {
  if '7' = 4 then ;
  {
  baz((b()), ((boo()) - (boo(('\''), (13 mod '\n'), a((21 + 35), ('7'), + 3)))));
  while 14 > 22 do ;
  j(m(- (- j), a((z mod (+ '\n')))), m[foo], ((b()) - b));
  {
  f <- (7);
  m(+ (("foo")));
}
  main(+ (((0))));
}
  {
  main[20] <- + '\n';
  "foo" <- j;
  baz <- (7);
  ;
  {
  "bar" <- (2);
  return (8 + 20);
  if 7 > '\'' then if '\n' = 0 then if 'a' >= 6 then ; else while '\n' = '\n' do if 23 = '\n' then while 24 > 36 do while 12 # 32 do while 'a' = 'a' do b('\n', 31, 'a'); else while 11 # 22 do if 'a' = 'a' then main('7'); else while '7' >= 13 do e <- 20; else k <- 41;
  if 0 > '\'' then if '\n' > 5 then ; else h <- '7'; else if '\'' = '\n' then {
  ;
  "Route66" <- + 8;
  while '\'' = 22 do if 9 <= 19 then return; else {
  return main;
  i['a'] <- (10);
  if 24 >= 'a' then while 42 <= 1 do {
  e <- "foo";
  while 13 = 2 do ;
  i((e(+ '7', - '7', main(- 32, z[26], (21)))), + (+ (+ h)));
  while 35 < '\'' do while 39 = 26 do if 30 = '\n' then c(24);
} else ;
  while 36 > 'a' do while '\'' <= 32 do l(8, '\n');
  {
  {
  j();
  g <- g;
  if 27 <= 25 then return '\n';
  "foo" <- (10 + 18);
}
  if 34 >= 10 then {
  a();
  while '\'' = 3 do ;
  ;
} else while 19 < 7 do "Name:\t\"DouglasAdams\"\nValue:\t42\n" <- '7';
  k['a'] <- ('\'' div '\n');
  if '\'' < 22 then if '7' <= 5 then while 29 <= 40 do if '7' = 24 then if '\n' <= 18 then foo('a', 27); else ;
  ;
}
}
  return;
  ;
} else boo <- '\'';
}
}
  {
  ;
  if 13 # 'a' then if 20 = '7' then if 'a' = 19 then g <- 14; else {
  while '7' <= '\n' do "bar"['\''] <- 17;
  j();
} else while '\n' <= 2 do return;
  while 22 <= 'a' do z();
}
  ;
}
  while 25 > '\n' do while 30 # 1 do {
  h <- - '\'';
  if '\n' # 20 then if '\'' > '\n' then while 10 > 0 do while 42 = 15 do return; else return;
}
  return (8 + '7');
  if 18 <= '\n' then k <- 34; else while 38 < 10 do return 40;
} else while '\n' <= '\'' do ;
}


{
  while 21 # 31 do b <- 39;
  if 'a' = 31 then {
  bar(b);
  {

}
  m <- main;
  d();
} else return 'a';
}


{
  while 10 <= 6 do bar();
  {
  {
  return "bar";
  if 22 # 27 then {
  return;
  ;
  ;
  h((n(a, - '\n')), (+ 35));
}
}
  {
  {
  e <- f;
}
  ;
  {

}
  while 24 = '\'' do "bar" <- 17;
}
}
}

fun a(f : char[]; ref g, d : char; j, a, k : char[]; n, main, e : char[]) : int

{
  if '\n' # 23 then ;
  {
  return e;
  {
  return a(y, m, e(k, baz));
}
}
}


{
  {
  ;
}
}


{

}

fun i(ref n, i, y : int[][6]; g, baz : int[4]; ref main, c, x : int[][20][17]; d, foo : char[]) : int;

{
  if '\'' # 32 then if 29 # '\n' then g <- '\''; else ;
  boo <- ('\n' div 30);
  while '7' <= '\n' do if 31 >= 2 then return '7'; else l <- 7;
}

fun j(ref k, n, g : char[]; ref main, m : char[]; z, k : char[]; i : int) : nothing
fun j(ref boo : char[]; h, h, g : char[]) : nothing;

{

}

fun boo(m, g : int[][22]; main : char[]) : nothing
var y : int;
fun j(ref x : char[5]; g : int[][31]; boo, n : char[][11][39]; ref x, x, n : int[]) : nothing
fun c(ref boo : char[9][19]) : nothing;
fun x(a, x, foo : int[]; ref main : char; ref x, x : int[]; e, d, f : char[]) : nothing;
fun h(z, foo : int[]; e : int; ref e, bar, a : int[][29][15]; ref a, z : int[][15]; ref g, h, bar : char[]) : nothing
fun f() : nothing
var z, h, c : char;
fun foo(main : int; ref d, b, m : char[][24]; ref main, m, l : char[]; bar, boo : char[]) : int
fun x(e : int[12][18]) : nothing
fun n(ref h, main, f : int[29]; ref baz, b : int; ref f, l : char[7]; g, i, e : int[][36][36]; c, e : char[8]) : int;
fun d(y, n, h : int[11]; ref foo, x, b : int[42]; ref z, n : char[]; ref l, baz : int[37][11]; ref c, y, f : int) : int
fun y() : nothing
fun foo(ref n, a, i : char) : char;
fun e(c : char[]; ref c : char[]; ref a, i, a : int) : nothing

{
  x <- z(h());
  if 42 < 22 then d <- 'a'; else return 'a';
}


{
  {
  if '\n' <= 38 then f <- 21;
  h(d);
  while 6 < '\n' do if 3 >= 3 then while 30 < '7' do return '\n';
  main();
}
  while 0 < 4 do ;
  e <- ('a' - 20);
}

fun d(e, k, baz : char[][32]; y, g : int[36]; i : char[]; foo, x, i : char; ref j, b : char[]) : int

{
  {
  if 'a' < '\'' then {
  x['7'] <- - 9;
  while '\'' <= 'a' do ;
  ;
  while 19 = 24 do k <- 18;
  return;
}
  bar <- - 18;
  {
  while 'a' >= 37 do z <- 29;
  {
  ;
  e[17] <- (5);
  d <- (31);
}
  "bar" <- (6 - 34);
  while 8 >= '\'' do return '\n';
}
  ;
  ;
}
  d(((+ '\'') * (c(('\n' + '\n'), d(('7' - 'a')), boo((3 - 20), ('\n' div 'a'))))), j(m[b(z, + 'a', (33))], (boo(j(- '\'', c))), + ((x))));
  while 41 >= 33 do return;
  while '\'' = 17 do return '\n';
  ;
}


{
  b();
  {
  {

}
}
  while 27 < 38 do return;
}


{
  n['a'] <- (10);
  ;
}


{
  if '\n' <= 'a' then b(- '\n', (36)); else "foo" <- 14;
  {
  ;
}
  if 'a' <= 32 then if '\'' < 19 then if '\n' >= '7' then {

} else ; else return 25;
  return;
}


{
  ;
  {
  if 'a' <= 3 then return; else return '\n';
  b((x + (m[9])), + ((((21 div '7')) - (+ 7))), ((j(- 18)) div (- 31)));
  baz((+ '\''), (c * (b((21)))), ((('a')) div (d(('\''), + '7', (20)))));
}
  ;
  a();
}


{
  while '\'' < '\'' do while '\'' <= 'a' do ;
  f <- main;
  return;
  if '\'' <= 5 then return; else i <- '\n';
  return ('\n');
}


{

}

fun boo(l : char[]; ref z, boo, x : char[][16]) : int
var i, main : int[38];
fun z(boo : int[]) : char
fun e(ref y : int[39]; y : char) : char

{
  "foo" <- ('\n');
  while '\'' < '\n' do ;
  {
  {
  {

}
  while '\n' <= '\'' do while 30 = 'a' do return;
  if 'a' <= 25 then ; else if '7' <= '\'' then ; else ;
}
  g();
  return (24 mod '\'');
  m <- - 37;
}
}

var n, j, n : int[30][23];

{
  return (5 mod 'a');
  {
  ;
  ;
  return;
}
  return ('a');
  ;
  {

}
}

var y : char;

{
  {
  return;
  return (1 div 38);
  ;
}
  ;
  l <- i();
  while '\'' = '7' do n(('a'), y, + 39);
  g <- - 7;
}


{
  if 8 > '7' then if '\n' >= 34 then while 14 = 11 do ; else while 10 <= 22 do z();
  ;
  return;
}


{
  f(+ (c(((2 + 20)), + (baz()))));
  return;
  return ('\n' * 17);
  return - '7';
  while '\'' < 16 do while '\'' > 'a' do m(35, 'a', 6);
}


{
  z <- f;
  while '\n' < '\'' do if 'a' = '\'' then ;
}

fun n(b : char; f : int[][9]; ref main, i : int[]; g, i, k : char) : char
var main : char;
fun d(m : char; z, j : char[15]; g, x, h : char[11]; ref a : int) : char;

{
  while 39 <= '7' do while 28 > '\n' do l('\'');
  if 29 > '\'' then a <- 11; else e <- 22;
  while 'a' > '\'' do if 28 < 4 then {
  while 14 <= '7' do boo <- '\n';
  ;
} else {
  while 16 >= 5 do ;
}
  h();
}


{
  {
  if 7 >= '\n' then m <- 30;
  if '\n' <= 24 then y <- '7';
  while 17 # 23 do while 37 <= '\'' do return;
}
  return h;
  h <- (4 + 35);
  while 25 = 39 do h <- 22;
}

fun y() : nothing
fun a(bar, boo, boo : char[0]; ref z : int[][2]; ref main, y : int[]) : int;

{

}


{
  {

}
  while 'a' <= 11 do while '\n' = 'a' do {

}
  boo <- l;
  return;
  while 'a' < 41 do if '\'' = 35 then n(29);
}

var b, c, d : char[34];

{

}


{
  if 20 = 0 then while '\n' <= 8 do while 5 >= '\n' do x <- 1;
  return;
  if 3 > 28 then e <- 21;
}

fun main(y, a : char; n, boo : char; ref y, m : char[15]) : char;

{
  c();
  return;
  k <- h(('\n'), y(+ 8), (7));
}


{
  return;
}

fun main(m, b, m : char[]; ref foo, f, b : int[12][23]) : char;

{
  z(m(), (h));
  {
  return;
  if '\n' < '7' then while 9 = 19 do return 32; else ;
}
  f <- n();
}

fun baz(g, e, g : char[5]; ref j, k : int[][40]; z, l : int[]; ref g : char[]; m : char[]) : int

{
  {
  y();
  while '\'' # 'a' do d(+ 4, - 'a', x(('\n' - '\n'), ('7')));
  if 10 < 'a' then if '7' > 41 then while 'a' = 13 do z(); else return 'a';
  ;
  return;
}
  if 32 = 25 then ;
  f <- y;
  m <- (4 * 12);
}


{
  return;
  bar[0] <- (39);
  "foo" <- a(+ '\'');
}


{
  return;
}
