fun c(ref j : int; ref n, c : int[][32]; j, boo : char[]) : nothing
fun c(ref boo, foo, x : char[]; foo : char[]) : nothing
fun i(ref d, x : char; ref h, f, baz : int[]; ref a, x : int) : char;
fun z() : nothing
fun foo(bar : char[][8][0]; boo : char[2]; ref d, l, e : int[]; ref i : char; ref d, z : int[7]) : nothing
fun x(ref k, boo : char[][39]) : nothing
fun k(ref b, bar, m : char; ref h : int[][20]; h : char[]) : char
fun l(main, j : int[][40][18]; j : char; ref k, z, x : char[][42]; ref g : char; k, n : char[]) : char
var baz, foo, i : int;
fun main(i : char[]) : nothing
fun m() : int;
fun z(ref y, a : char[]; ref foo, j : char) : int
var f, j : char[14];
fun foo(baz : char[]; ref y : char; boo, j : int[][4]; ref i, boo : char[13]; ref z, k : int[]) : nothing;

{
  while 3 >= 30 do f <- '7';
  while 5 # 30 do {
  if 'a' # '\n' then return 37;
  "Name:\t\"DouglasAdams\"\nValue:\t42\n" <- - 1;
  {
  return;
}
  while 39 < 11 do while 37 < 29 do {
  c <- (2);
}
}
}

fun l(ref m, k, l : char[]) : int
fun n(ref baz, m : int[][31][42]; j : char[32]) : char
fun l(k : int[][20]) : char
fun k(boo, g : char[]; ref x : char[]; bar, i : int[17]; d, z : int; ref k : int[]) : nothing;

{
  if '\'' # 'a' then n <- 38;
}


{
  y['a'] <- c;
  c[13] <- + 3;
  if 9 <= 1 then if 16 = 'a' then {
  if '7' > 41 then while 11 < 20 do {
  if '\'' > 4 then return; else k <- '\n';
  if 0 < '7' then return '\n'; else ;
  return;
  b <- (22);
  {
  g(z((- '\n')), ((l(l)) mod (- 14)), m);
  while 'a' # '\n' do e[16] <- 41;
  {
  return;
  return "Name:\t\"DouglasAdams\"\nValue:\t42\n";
  {
  i(l(((('\'')) + (('\'' - '\n'))), "Route66", ((+ '\'') mod (('7')))));
  while 'a' >= 6 do ;
  return "foo";
  ;
  {
  if '7' <= '\n' then e <- '7';
  return + 6;
  c['\''] <- ('\'');
  return + '\n';
}
}
  x <- d;
  while '\n' = '\'' do {
  baz <- z;
  if 'a' >= 26 then while '7' <= '\n' do if 14 # '\'' then l(); else d <- 30;
  while 'a' > 27 do j(j(('\n' - '\n')), d, (3 div 23));
}
}
}
} else {
  return ('\n' - 'a');
  ;
  {
  if 21 < 31 then if 20 <= '7' then baz('\'', '\'');
}
  h <- x(('\'' mod '\''), (16));
  h <- m;
}
} else while 10 = 4 do if '\n' > 8 then a <- 12;
  while 10 <= 5 do return;
  return;
}

fun g() : char
fun foo() : char
var c, n, f : char[9];
fun f(ref e, baz : int[14]; ref l : char[]; boo, i, y : int[][29]) : char
fun m(y : int[]; z, y, i : char) : nothing
fun c(ref boo, i, h : char) : char
fun foo(bar, d, x : char[]) : char;
var m, j, d : char;

{
  c(h());
  ;
}

fun boo(foo : char) : nothing;

{
  e <- + 'a';
  while 41 > 11 do return '\n';
  return;
}


{
  while '\n' > 32 do y <- 26;
  ;
  "bar" <- f((12), (42), ('a'));
  {

}
  while 3 <= '\'' do c <- '\n';
}


{
  a((('\n')), x(l(((('7' * '\n')) mod (('\''))))));
}

fun i(z, z, x : int; j, n, l : char[3][23]) : char
fun boo(b, foo : char[]; ref boo, baz, x : char[34]) : nothing
fun k() : nothing
var baz, j : char[34];
fun main(ref d, j, x : char[][2]; ref g, foo, n : int[27]; ref j, k : char[][27]; main : char; ref bar, baz : char[]) : int
fun baz() : nothing
var a, n : int[29][42];
fun n(h, bar : char[][29]) : int
fun main(a : int; ref x : char[21]) : nothing
fun a(l, z, main : int[]; ref y, n : char) : char
fun l() : nothing
fun b() : int;
fun f(ref m, z : char[6]; a, j : int[][26]) : char
fun baz(b, boo : char[]; l : int; b : char[][12]; ref boo, baz : char; ref n, e : int[]) : nothing
fun z(i, f, j : char[][38]; ref a, main : int[11]; ref g, y, f : int[]; n : int[]; ref b : char[][23]) : nothing;

{
  if 42 = 'a' then c <- 42; else foo("bar");
  {
  ;
  ;
  main <- c(bar(g(('\n')), (12 * 'a')));
}
}

fun f() : char;

{
  boo(baz, (n - (i(- 25))));
  n <- (30);
  return;
}


{
  ;
}

fun y(ref z : char) : int
fun boo(ref k : int) : nothing
fun e(ref c : int[]; main, m : int; ref h : int; ref a : char[]) : char
fun m(b, z : int[36]; ref b, baz : int; e : char[32]; f, d, c : int[42]; ref a : char) : int
fun baz() : int

{
  if 32 <= 33 then while 23 < 12 do c <- 7; else if '\'' <= 29 then n <- 36; else while 10 >= '7' do ;
  "foo" <- (37 div '\n');
}

fun b(c : int[42][7]; c, i, g : int) : int
fun main() : nothing;
fun d() : nothing;
fun m(ref j : char; z : int[][36][23]; baz, j : char) : int
fun x(e, a, h : int[][13]; ref d : int[3][8]; ref f : char; foo, boo : int[]; ref g, c, n : char) : char;

{

}


{

}

fun l(i, h, c : char) : nothing;

{
  g <- f(+ '\n', h);
  return z(d, l(z));
  ;
}

var a : int[4];

{
  {
  a(f(((bar(d())) - (- 10))), + (a(l)), (('\'' - '7')));
  n <- (3);
  while 8 <= 6 do z(+ 20, ('\''));
  while '\'' # '\'' do return;
  while 11 >= 'a' do {
  c <- h;
}
}
  baz(+ (g(((10)), (e()))), bar, h);
}

fun l(x, baz : int; ref e, d : char[]; boo, j : char[][11][19]; m : int[][22]; ref b, y : int) : nothing
fun m(ref d, boo : char[22]; main : char) : nothing
fun d(ref h : char[]; ref main : int; ref j, g : int; ref z, c : char; ref x : char[5]) : int
fun i(l, main, foo : char[]; ref y, m : int) : nothing

{
  while 40 >= '\'' do {
  if 17 # '\n' then while 35 < 'a' do baz <- 'a';
}
}

var bar, z : int;
fun a(ref i, bar, i : int; foo, n : int; g : char[][12]) : int

{
  {
  while '\n' < '\'' do j['\''][28][3][28] <- '\'';
  l();
  while 38 # 28 do return '\n';
}
  if '\'' > 'a' then ; else ;
  e(main(x(), l(z, - ((- '\n'))), boo(k((foo())), ((e((30 div '\n'))) div ((35 div 28))), + ((b div (- 22))))), h(h(), (((26 div '\'')) div (b()))), b("bar"[+ 0], + (- ((19 - 17))), n((foo), j)));
  while '\'' # '7' do ;
  return;
}


{

}

fun n(a, x : char[8][37]; ref j, z : int[]; f, baz : char[]; x, boo, y : int[10]) : nothing;
fun b() : int
fun e(ref j, k, boo : int[]; c, i, foo : int; ref f, baz, main : int; ref m : int[12]) : char
fun baz(ref i : char[38]; ref foo, e, b : int[]; m, k : char[]; ref a, g : char[][14][18]; b, i : int) : nothing;
fun f() : char
var y, main, h : char;
var e : int;
var b, x, m : int[26];

{
  if '\n' >= '7' then while 20 < 10 do if 5 # 37 then y(36, '\n'); else {
  while '\'' # 19 do return;
  ;
  return;
  boo <- - '\'';
  i <- - 19;
}
  i(z, ((('\'' mod '7')) div h));
  ;
  z(+ y);
  main <- - '7';
}


{
  while 31 # 8 do a <- '\'';
  while '\'' = 5 do {

}
  ;
  if '7' # 13 then x();
}

fun m(ref c, boo, bar : int[]) : int

{
  while '7' # 29 do z();
  while 28 < '\'' do if '\'' >= '7' then while '\n' >= 'a' do "Route66" <- 'a'; else boo <- 2;
  h <- - 37;
}

var h : int;

{
  while '\'' # 'a' do d(+ '\'', ('a' + 'a'), + 1);
  return (35);
}


{
  e <- "bar";
  if 28 # '\n' then {
  if '7' >= '\'' then baz((7), z, l);
  while 30 = 21 do while 38 = 8 do if 21 > '\n' then if 16 = '\n' then return; else {
  l <- y;
  if 25 > '\'' then ; else if 0 # 42 then ; else return;
  {
  {
  return;
  ;
  g <- m;
}
}
  k['\n'] <- y;
  n[31] <- (21);
}
  foo(y, l);
  ;
  while 17 >= 14 do ;
} else d <- '7';
  g(baz);
}

var n, n, j : char[28][20];

{
  return;
  a(((m()) - (- '\'')), l(((0 div 1)), ((d(f['7'])) div (('7')))), f((('\'' - 7)), (i mod (('a'))), "bar"));
  return;
}

fun bar(ref f : char; bar : char[][24]; y, z, h : int[]) : nothing
fun bar(ref x, i, z : char[17]; l, l : int[]) : char

{
  ;
  while 7 = 18 do e(('a'), foo);
  {
  if 0 = 31 then return; else if 37 < 37 then ; else bar <- '\n';
  ;
  while 36 >= 39 do d((30 * 24));
  return;
}
  f(- ((foo(i(('a'), ('\'' - '7'), (35))))));
  {
  if 'a' < '7' then main <- '7'; else b(- 32, ('\n'), ('7'));
  return (13);
}
}


{

}


{
  while 39 > 10 do if 34 <= '7' then if 19 <= 29 then g(); else if 31 > '\'' then baz <- 'a'; else while 15 = 'a' do while '7' < '7' do while 36 >= 41 do d[15] <- 18;
}

fun boo() : nothing;
var k, f : int;

{
  while 38 # 33 do l((8 div 17), m[26]);
  if '\n' = 15 then x <- '\n';
  while 1 >= 18 do if 18 # '\'' then z(0);
  z <- d;
  ;
}

fun f(l, z : char[][40]; ref baz : int; g, z, n : char; ref foo, main, j : char[]) : char

{
  k();
  ;
  g <- ('\n');
  return;
  if '\n' # '7' then {
  return (11);
  ;
  while 1 > 'a' do {
  j("foo", e(), l);
  if 'a' > 15 then d['\''] <- '7';
  while '\'' >= '7' do ;
}
}
}


{
  {
  ;
  if 8 = '\n' then "bar" <- 22;
}
}

fun h() : int
var j : int[33][38];
fun i(ref l : int[25][10]; ref foo, x : char[12]; g, y : char[]) : int
fun foo(l, h, f : char[24]) : int;
fun f(g : char; ref d, bar : int[]) : nothing;
var c, x, z : char[5];

{
  while 'a' >= '\n' do {
  {
  "Route66" <- (41);
  return ('a');
  m <- - 'a';
  return;
}
  a <- g;
  if 15 <= '\'' then if 'a' > 23 then while 32 < 17 do while '7' > '7' do if 18 = 12 then return 29; else return '\n'; else {
  while 19 = '\n' do ;
  {
  ;
}
}
  z();
  ;
}
  {
  if 29 = 16 then i(); else {

}
  {
  return a;
}
  {
  if '\n' >= '7' then e(g, (12)); else return '\n';
}
  while '\n' <= 0 do if 'a' # 16 then return;
  if 31 # 36 then b(('a' * '\n')); else if 'a' < 'a' then c <- 27;
}
}

fun a(g, a, n : int[][7]) : nothing;

{
  if '\n' < '\n' then while '7' < '\'' do if '7' # 12 then if 14 >= 'a' then {
  return g;
  c <- y(('7'), - 1, - 'a');
  return (19 mod 34);
} else return 0; else if 22 > 'a' then g('\n', 'a', 42); else b('\'');
  "foo" <- + 'a';
}

fun main(boo, z : char) : int
fun b(ref b, i, foo : int; ref z, bar, d : int[31]; l : int[20]) : char
fun j(ref b, c, e : char; ref k : char[][21]; main, d : int[][7]; ref foo, i, d : char[38][36]) : char;
fun x(ref baz : int[]; ref main : int[]; ref e, e, j : int; z, i, i : int) : nothing;
fun m(l, y : int[]; x, m, foo : int[]; ref x, main, bar : char[3][14]) : nothing;

{
  z(j);
  {
  while '\'' # 14 do if 'a' > 4 then d('\n');
  a(+ (("foo")));
  "Route66" <- foo;
  ;
  ;
}
}


{

}


{
  j[0] <- - 27;
  j <- ('\n' * '\n');
}

fun y(ref e : int[][2]) : char
var z, baz : int;
fun y() : char;
fun x(ref j, g : int[]; e, b, j : int; ref x, b, d : int[]) : nothing;

{
  f[14] <- f(z, "bar", n(('\'' - 34), - '\n', + 32));
  return;
  if 'a' <= 3 then if '\n' < 'a' then bar <- 13; else b();
}


{

}


{
  return;
  while '7' < '7' do return 'a';
  if '\n' = 'a' then if 'a' <= 18 then return; else if 40 <= '\'' then return;
}

fun a(ref main, k, a : int[]; i, boo, i : char[]) : nothing
fun h(l : char[]; h : int[0][25]; g : char[][27]; ref m, l, a : char; ref j, l, h : int[]) : nothing

{
  return (26);
  b <- (28);
  while 7 > 'a' do j(b, + 25, (40));
  while 39 < '\n' do bar <- 29;
}

fun foo() : char
fun baz(d : char[][18]; ref main : int[13][7]; ref z, d : int[19][35]) : nothing
fun l(ref g, f, i : int[12]; ref foo, z, boo : char[0][16]; n, g : int[][35][10]) : int
fun foo(ref l : char[27]; g, l : char) : int
fun c(a, foo, j : int) : nothing;
fun g(ref foo : char[]; ref boo : int[]; g : int[][1]; i, c, g : char) : nothing
fun i(z, g, g : int[41]; ref i, d, main : char[][36][12]; ref l, foo, l : int; f, c, y : char; j, d, b : int[]) : nothing

{
  return + 29;
  while 'a' > 25 do c();
}


{
  ;
  while '7' <= 14 do y(('7' - '7'), main, (31));
}

var main : char;

{

}


{
  return;
  h("foo", b);
}

fun bar(ref l : char) : int
fun m(z : char[][9]; b, n : int; f, e, baz : int; boo, i : int[]; d, b : int) : int
var b, f : char[20];
fun bar(ref f : int; ref f, boo : char[6]; ref x, d, m : int[19][3]; ref boo, g : int[]; ref boo, j : char[]) : int
var x, n, z : int;
fun l(ref b, l : char[][6]; ref k, i : char[]; ref g : int[][41][22]) : nothing

{
  return;
  ;
  if 'a' # '7' then {
  while 8 < 'a' do l(d(+ '\n', ('\n' - 5)));
  i <- d;
  while '\n' > 31 do i(e, ('a'));
} else m(m(n, - 31, + 0));
}


{
  if '\'' >= 12 then c <- 2;
}


{
  while 40 = 8 do {

}
  ;
  "Route66" <- (28 * '7');
  while 18 # 31 do if '\n' > 40 then if 7 > '\'' then return 34; else while 23 = '7' do e(); else if 5 # 36 then ;
  ;
}


{
  while 10 <= 7 do {
  boo();
}
  if 'a' # 15 then {
  k <- - 16;
}
  return;
  while '\n' <= 37 do a();
  while 'a' > '\'' do ;
}

fun j(ref x, k : char; ref b, m : char[]) : char

{
  g <- (38);
  while 8 <= 'a' do {
  main();
  d();
  return;
  return;
}
  m <- (40 mod 26);
}


{
  "Name:\t\"DouglasAdams\"\nValue:\t42\n" <- (34);
  c <- main(main(+ '\''), + '7', j(('\n')));
  x();
}


{
  ;
  return;
}


{
  if '\n' <= 2 then while 1 > '\n' do if 22 = 35 then while '\'' >= '7' do ; else b <- 7;
  e((- '\n'), ((('\'' mod 42)) + ((38 mod 2))));
  return;
  while '7' >= 32 do if 34 = 16 then if 12 < 26 then return; else ; else {

}
}

fun n(ref k : int) : nothing;

{

}


{

}

fun i(ref baz : char[][38][14]; ref k, c, z : char[]; ref z, m, i : char[]; foo, h : char[]) : int;
fun i() : nothing
fun j(ref f, y, a : int[18]; m, baz : int[][31]; m, f, k : int[5][38]) : nothing
fun c(boo, c : char[9]; x : int[]; ref y, e : int; ref x, b : char[]) : char

{
  return;
  e[33]['\n'] <- k;
}

fun boo(ref g, g : char[]) : nothing
var l, x : int;
fun g(ref b, x, x : char; ref bar, baz, z : int[]; ref e, a : char[][38]) : int
fun g(ref i, l, a : char[]; ref y, x, y : char[][38][17]) : nothing
var g : char[19];
fun bar() : nothing
fun i(b, bar, l : char[][33]; b : int; x, bar, h : int[][42][33]; ref c, m, y : int[][37][39]; ref foo, baz : char[]) : char;

{
  if 23 >= 'a' then while '7' >= 20 do c <- 32; else baz <- 29;
}

var j : int;

{
  while 11 = 40 do return 31;
  while '7' = 33 do if 11 >= 39 then ;
  ;
  return (1 - '\n');
}

var h, f, e : char;
fun n(foo : int[]; foo : int[8][27]; boo, h : int[]) : char;

{
  {

}
}

fun y(ref baz, e, h : char[]; z, y, h : char) : nothing

{
  if 16 >= 27 then return; else baz <- 'a';
  return a(h, ('\'' mod 15));
  return - 29;
  ;
  while '\'' >= 30 do return '\n';
}


{
  while 23 <= 36 do return '7';
  while '\n' = 7 do {
  while 16 >= 'a' do {
  l(+ (baz()), (('7' div 26)));
}
  return;
  while '7' > '7' do return;
  bar <- (22 + '\n');
  ;
}
  if 8 # '7' then if 26 <= '\'' then if '7' >= '\n' then {
  while '7' = 35 do while '\n' <= 4 do return 40;
  if 25 >= 34 then ;
  while 0 # '7' do f <- 4;
} else {
  while '7' > 'a' do y <- 10;
  k();
  ;
} else bar('7', 32, '7');
  d <- (8);
  if '\n' < '\n' then if 38 <= 'a' then if 2 <= 23 then while 'a' > 4 do while '\'' <= 36 do while '\'' > '\n' do while '7' = 7 do while 38 >= '7' do {
  return;
  a <- z;
}
}


{
  z(z, baz(- ((d("bar"))), "Route66"));
}

fun l() : nothing
var foo : char;
fun y(main, f, b : char[]; e, j : int[]; g, n, foo : int) : char
fun k(ref e : char[19]; i : int[15]; f : int) : nothing;
fun boo(i, i : int; ref a, g, i : char[][14]; ref l, g, c : char[]; ref h, j : char[10]; b, x : int) : int
fun d(f : char; ref n : int) : int

{
  if 25 < 14 then return 16;
}


{
  {
  while 24 > 'a' do baz(('\''));
  return;
  ;
  return ('\'');
  if 31 > 25 then while 'a' = 14 do i('\n', '\'', 33); else ;
}
  ;
  ;
  while 35 = 39 do {

}
  ;
}

var k, d : int[37][25];

{
  if '\'' = 'a' then {
  if 32 < 'a' then return;
  if '7' < 13 then while 14 # 12 do while '\'' # 'a' do x('\'');
  {
  c(f(), + (((('\'')) mod (+ 'a'))));
  while '\'' < '\n' do while 'a' >= 'a' do while 8 > '\n' do while 24 < '7' do {

}
  {
  return ('\n' div '\n');
}
  while 39 > 27 do d <- 30;
  if 10 # '7' then if '7' # 15 then if 23 >= '\'' then if '7' <= 15 then j(26, 5); else return 40; else if 23 < 8 then while 'a' = 19 do z(27, 10); else while 7 # 25 do ;
}
  if 27 >= 36 then ; else while 2 >= 13 do {

}
  return;
} else {
  while 'a' < '\n' do "Route66" <- '\'';
  n(- (- (+ (foo()))));
}
  if 8 < 14 then return 23; else return '7';
}


{
  while 39 >= 'a' do f[13] <- '\n';
  if 9 > 10 then return;
  ;
  {
  y <- a;
  while 29 > '\'' do ;
}
  if '\'' <= '\'' then return 2;
}

var b, l : char;

{
  f(- (+ (+ d)), ((d(('7'))) div ((17 * 36))));
  j(x());
}


{
  n <- n((26 mod 41), - 28);
  while '\'' # '7' do a(a);
  return;
  ;
  boo(j(+ (((z()) - x)), (foo(g, ('a' + 'a'), + '\''))), ((j()) + (+ 0)), (('7')));
}

var z, m, baz : int;

{

}


{
  "bar"['\n'] <- ('7' mod 'a');
}

fun j() : nothing
fun boo(ref e : char; a, bar, main : int[][11]; a : char; ref a, b, m : char[11]; l, e, j : char[]) : char;
var d : int[39][37];

{
  ;
  {
  ;
}
  f(i("foo", m((l((12), boo)))), (i(- 35)));
  if 2 <= 12 then "Route66" <- 38;
  l['\n'] <- (34 mod 34);
}


{
  h[37] <- (29 - 26);
  if 'a' = '7' then i(); else if 17 <= '7' then b('a', '7'); else foo <- 'a';
  {
  z(j[z()]);
  y <- + '7';
  i((foo), bar((((2)) div ((6 div 0))), (foo)), - ((('\n'))));
}
}


{

}


{
  if 19 <= 10 then return; else f <- 'a';
  c(f(i, - (((c(h(+ '7', z(b(), - 21)), + '\n')) + (h[18])))));
  if '7' <= 38 then return '\''; else m <- 'a';
  c();
  return ('\n' * 'a');
}


{
  h();
  if '\'' > '\n' then ;
  ;
}


{
  l['\n'] <- + 24;
  n(((26 * 12)), - "bar");
  ;
  if '\n' = 20 then ;
}

fun h(ref y, x, boo : int; ref m : int[30]; ref f : int[5]; ref foo, d : char[]) : char;

{
  while 1 <= 7 do ;
  {

}
  n(+ (foo(c[main()], ((n()) * ((23 mod '7'))), ((+ 40) - (('\n'))))));
}

fun x(ref foo : char; ref z : char; ref foo, i, x : int[][4]; h : char[]; ref bar, d, b : int[]) : nothing
fun n(boo, boo : char[]; ref foo, main, a : int[]; ref a : int[]) : char
fun g() : int
fun m(ref boo, z : int) : nothing;

{
  ;
  if 40 = 'a' then if 13 # 32 then c(39, 24, '7'); else {
  {
  x(y, - (f((+ 41), a)));
  boo(+ c, n);
  if '7' < 39 then return 'a'; else if 21 = 27 then return;
  return;
}
  while '7' >= 42 do return '\'';
  ;
  n();
}
  i <- baz;
  main(+ ((c mod (('\n')))), (b()), ((2)));
}

fun i() : int
fun e(ref c, g, n : int[]; ref g : char[][31]) : nothing;

{
  {
  e <- + '7';
  while 29 < 16 do {
  "foo"['7'] <- (5 div '\'');
}
  c();
  ;
}
  ;
}


{
  foo();
  foo <- foo();
}

fun bar(ref j, foo : int[]; foo, d : int[]; n, b : int[]; ref l, main, i : int[]) : nothing;
fun f(h, e, i : char[]; d, h : char[]; ref y, c, e : int[36]) : int;

{
  x(g, c(bar((- 36)), main(), ((+ '\'') mod (main(('\''))))));
  "bar"['\''] <- ('\'' - 14);
}

fun baz(ref n : int) : char;

{
  if '\'' = 6 then f();
  baz(bar(), y, baz(k[('a' - 8)]));
  d <- + '\'';
  {

}
  if 'a' = 'a' then y <- 'a'; else if 30 = '\n' then if '\n' > 37 then ;
}


{

}


{
  l(j);
  i['\''] <- ('\'' - 4);
}
