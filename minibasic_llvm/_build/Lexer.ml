# 1 "Lexer.mll"
 
open Lexing
open Parser

# 7 "Lexer.ml"
let __ocaml_lex_tables = {
  Lexing.lex_base =
   "\000\000\236\255\237\255\001\000\005\000\240\255\241\255\242\255\
    \243\255\244\255\245\255\246\255\014\000\019\000\022\000\015\000\
    \025\000\016\000\017\000\028\000\016\000\026\000\022\000\017\000\
    \255\255\018\000\254\255\021\000\253\255\252\255\033\000\032\000\
    \028\000\251\255\039\000\250\255\249\255\039\000\031\000\248\255\
    \238\255\002\000";
  Lexing.lex_backtrk =
   "\255\255\255\255\255\255\019\000\016\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\008\000\009\000\009\000\009\000\
    \009\000\009\000\009\000\009\000\009\000\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255";
  Lexing.lex_default =
   "\001\000\000\000\000\000\041\000\255\255\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\000\000\255\255\000\000\000\000\255\255\255\255\
    \255\255\000\000\255\255\000\000\000\000\255\255\255\255\000\000\
    \000\000\041\000";
  Lexing.lex_trans =
   "\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\004\000\004\000\040\000\040\000\004\000\004\000\004\000\
    \000\000\000\000\004\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \004\000\000\000\000\000\000\000\000\000\004\000\000\000\003\000\
    \009\000\008\000\005\000\007\000\000\000\006\000\000\000\000\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \012\000\012\000\000\000\000\000\000\000\010\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\011\000\016\000\011\000\017\000\015\000\018\000\011\000\
    \011\000\014\000\011\000\011\000\019\000\011\000\011\000\011\000\
    \020\000\011\000\011\000\011\000\013\000\011\000\011\000\011\000\
    \011\000\011\000\011\000\037\000\036\000\034\000\030\000\029\000\
    \027\000\025\000\021\000\022\000\023\000\024\000\026\000\028\000\
    \031\000\032\000\033\000\035\000\038\000\039\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \002\000\255\255\255\255\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    ";
  Lexing.lex_check =
   "\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\003\000\041\000\000\000\004\000\004\000\
    \255\255\255\255\004\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\255\255\255\255\255\255\255\255\004\000\255\255\000\000\
    \000\000\000\000\000\000\000\000\255\255\000\000\255\255\255\255\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\255\255\255\255\255\255\000\000\012\000\012\000\
    \012\000\012\000\012\000\012\000\012\000\012\000\012\000\012\000\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\000\
    \000\000\000\000\000\000\013\000\014\000\015\000\016\000\017\000\
    \018\000\019\000\020\000\021\000\022\000\023\000\025\000\027\000\
    \030\000\031\000\032\000\034\000\037\000\038\000\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \000\000\003\000\041\000\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    \255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\255\
    ";
  Lexing.lex_base_code =
   "";
  Lexing.lex_backtrk_code =
   "";
  Lexing.lex_default_code =
   "";
  Lexing.lex_trans_code =
   "";
  Lexing.lex_check_code =
   "";
  Lexing.lex_code =
   "";
}

let rec lexer lexbuf =
   __ocaml_lex_lexer_rec lexbuf 0
and __ocaml_lex_lexer_rec lexbuf __ocaml_lex_state =
  match Lexing.engine __ocaml_lex_tables __ocaml_lex_state lexbuf with
      | 0 ->
# 11 "Lexer.mll"
             ( T_print )
# 129 "Lexer.ml"

  | 1 ->
# 12 "Lexer.mll"
             ( T_let )
# 134 "Lexer.ml"

  | 2 ->
# 13 "Lexer.mll"
             ( T_for )
# 139 "Lexer.ml"

  | 3 ->
# 14 "Lexer.mll"
             ( T_do )
# 144 "Lexer.ml"

  | 4 ->
# 15 "Lexer.mll"
             ( T_begin )
# 149 "Lexer.ml"

  | 5 ->
# 16 "Lexer.mll"
             ( T_end )
# 154 "Lexer.ml"

  | 6 ->
# 17 "Lexer.mll"
             ( T_if )
# 159 "Lexer.ml"

  | 7 ->
# 18 "Lexer.mll"
             ( T_then )
# 164 "Lexer.ml"

  | 8 ->
# 20 "Lexer.mll"
             ( T_const (int_of_string (lexeme lexbuf)) )
# 169 "Lexer.ml"

  | 9 ->
# 21 "Lexer.mll"
             ( T_var (lexeme lexbuf).[0] )
# 174 "Lexer.ml"

  | 10 ->
# 23 "Lexer.mll"
             ( T_eq )
# 179 "Lexer.ml"

  | 11 ->
# 24 "Lexer.mll"
             ( T_lparen )
# 184 "Lexer.ml"

  | 12 ->
# 25 "Lexer.mll"
             ( T_rparen )
# 189 "Lexer.ml"

  | 13 ->
# 26 "Lexer.mll"
             ( T_plus )
# 194 "Lexer.ml"

  | 14 ->
# 27 "Lexer.mll"
             ( T_minus )
# 199 "Lexer.ml"

  | 15 ->
# 28 "Lexer.mll"
             ( T_times )
# 204 "Lexer.ml"

  | 16 ->
# 30 "Lexer.mll"
                         ( lexer lexbuf )
# 209 "Lexer.ml"

  | 17 ->
# 31 "Lexer.mll"
                         ( lexer lexbuf )
# 214 "Lexer.ml"

  | 18 ->
# 33 "Lexer.mll"
                  ( T_eof )
# 219 "Lexer.ml"

  | 19 ->
let
# 34 "Lexer.mll"
          chr
# 225 "Lexer.ml"
= Lexing.sub_lexeme_char lexbuf lexbuf.Lexing.lex_start_pos in
# 34 "Lexer.mll"
                  ( Printf.eprintf "invalid character: '%c' (ascii: %d)"
                      chr (Char.code chr);
                    lexer lexbuf )
# 231 "Lexer.ml"

  | __ocaml_lex_state -> lexbuf.Lexing.refill_buff lexbuf;
      __ocaml_lex_lexer_rec lexbuf __ocaml_lex_state

;;

