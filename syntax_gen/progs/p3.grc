fun main(ref main : int[]; ref bar, n, y : char; ref l : int; n : char) : nothing
fun f(k, k : char; ref d, z : char[4]; foo, l : int[][3]) : nothing
fun k(ref baz : int[]; f : int[][29]; ref z, m : int; a, main, l : int[]; ref z : char[][22][9]) : nothing
fun x(m : int; b, n : char[31][1]; y, i, y : int[8][16]; ref b, k, n : int[][14]; y : char[][11]) : nothing;
fun x()  nothing;

{
  return;
  ;
  {

}
  return;
}

fun baz(baz, m : int[9]) : nothing
fun e(baz, k, bar : char; ref d, x, i : char[][10][38]; i : int[]) : nothing
var foo, foo : char;
fun main(ref x : char[][38]) : char;

{
  if '\'' # '\'' then x(); else if 29 <= '\'' then ; else while 34 < '\'' do if 9 > 19 then while '\n' > 'a' do return '\'';
  while 'a' = 17 do if 'a' # 29 then return; else {
  if 'a' # '\'' then return 16; else return '7';
  while 34 # 'a' do while 29 > 20 do l <- '\n';
  ;
  return main(j, l, h);
}
  while 'a' < 19 do if '\'' > 1 then {
  while 35 < 7 do {
  ;
  "Route66" <- - '\n';
  boo <- foo((6), ('7'), h(g, ('\n' * '7')));
}
  ;
  if 32 <= 41 then x <- 24; else "bar" <- 1;
}
}

fun l(ref d : char[][20]; ref k, foo, h : int; ref a, foo : int[]; ref m : int; k, boo, d : int[][31]) : int
fun g(n, l, h : char; ref j, e, k : int[]; main, l : char[0]; a, n, e : int[]; ref g, c, h : char[][26]) : nothing
fun b(ref h : char[]; ref d, d : int[15][21]) : int

{
  {
  {
  {
  main <- g(- '7', (30 + 31), ('7'));
  return ('\n');
  while 16 # 29 do if 35 # '7' then return 'a'; else if 10 <= 3 then k(2, '\'', 'a'); else if 0 > '\n' then bar(); else f <- 12;
}
  while 22 = '7' do {

}
  ;
}
  baz(b);
}
  if 23 = 33 then y(('\'' mod '\''), - 0, (1));
  if '\'' >= 3 then ;
  ;
  "bar" <- l;
}


{
  z <- + 'a';
  i();
  y <- ('7');
  d <- z;
  c <- (26 mod '7');
}

fun l() : char
fun k() : int
var f : char;
fun baz(ref n, i, bar : char[16]; j : char[][22]; a, j : char) : int
fun y(ref f, m, n : char; ref z, j : char[]) : nothing
fun y(l, n : char; ref k : char[][18]) : char

{
  {
  if '\n' >= '\'' then {
  {
  if 'a' < 'a' then main <- '\''; else if 36 > 37 then while 'a' >= 36 do return '\''; else {
  ;
  if 15 # 34 then return 17; else l((16 + 'a'), h(- 21, ('\'')));
  ;
}
  ;
}
  {
  b <- ('7' - 24);
}
  ;
} else return 40;
}
  {
  while '\'' = '\'' do while '7' < 22 do boo('a');
  while 'a' <= '7' do e <- '\'';
  {
  while 37 = '\n' do h((34 mod 32), (17 + '\''), m((23 - 36)));
  ;
}
  while '\'' < 41 do return;
}
  ;
  return;
}

var f, y : char[13];

{

}


{
  while 27 <= '\'' do while '7' >= 17 do return 25;
  return j(('\''), (37), ('\''));
  {
  while 29 >= '7' do return '\n';
  if '\'' > 21 then {
  while 9 >= '\'' do baz();
  return - 'a';
  ;
  return (3 - 12);
  {
  f(- (((e(('\n'), + 3)) div (('\n')))), ((d(+ '7')) - z), ("bar" mod (('\'' + 'a'))));
  return;
  return;
}
} else "bar" <- '7';
  {
  ;
  m();
  if 4 >= 33 then while '7' = 3 do while 39 <= 35 do ;
  ;
}
  y <- bar();
  {

}
}
  i <- ('\n' mod '\n');
}


{
  while 25 < '7' do f(- 17);
  while '7' <= 21 do "foo" <- 19;
}


{

}

fun e(ref n : char) : char
var e : char[7];
fun main(ref z, main : int[]; baz : char[][21]; ref z : char[][10]) : char
fun z(i, foo, h : int[14]) : nothing
fun i(f, bar : int[]; ref c, n : char; boo, j, main : char) : nothing
fun bar(d : char[]) : nothing;
fun baz(ref bar, h : int; l, h : int; ref d : char[]; y : int[]) : int
fun g(main, x : int[16]; f, c, y : char[24][23]; ref y, y, j : int; x, z, e : char[]; f, foo, x : int[21]) : nothing
fun a(j : char; ref m, x, e : int; ref main, z : char[]; ref f, h, z : int) : nothing
fun y(ref boo, d : int[][37]; y : char; ref z, z : int[17]) : int
fun foo(c : int[]) : nothing;

{
  if '\n' < 9 then "bar" <- '7'; else return 'a';
  {
  while '\'' >= '\n' do l['\n'] <- 9;
  if '\'' = 25 then while 8 > 42 do e <- 37; else if 27 > 28 then ;
  c <- (39);
  if 22 <= 26 then return; else while 28 < '7' do ;
}
  {
  return;
  {
  {
  if 'a' < 41 then if 20 < '\'' then f <- 34; else {
  while 37 >= 4 do i <- 23;
  {

}
  if '\n' > 38 then {

}
  if '7' < 32 then main((42 - 17), (3 mod 23), y); else ;
} else return;
  main <- (1);
  {
  ;
  d <- (3 - 30);
  return boo;
  {
  if 42 > 14 then if 22 <= '\n' then ; else y <- 'a';
  return (21);
  while 26 >= '7' do ;
}
}
}
  "bar" <- (34);
}
  j[28] <- (0 mod '7');
  m();
}
  m();
}

fun f(m : int[4][14]; e, z, x : int[18]; x : char) : nothing

{
  return;
  {
  k <- - 8;
  while '7' < 8 do return;
  g(foo[+ 'a'], m(((- 39) mod (('\'')))), baz());
  y();
}
  d(("foo" + main), k, l);
  ;
}


{
  while '\n' > 3 do if 6 <= 9 then n(); else ;
}

fun y(ref g : int[38][41]; ref y, d, j : int[18]; h, m, bar : int) : nothing

{
  {
  return;
}
  ;
  {
  {
  {
  if 19 > 'a' then bar((6), (37), - 23);
  if 18 < '7' then if 29 < '7' then while 1 = 23 do {
  while '\'' > 14 do return '7';
  if '\'' < '7' then if '\'' <= '7' then {
  foo(((- 8) mod (('\n'))), i(+ (((foo()) * (f()))), z()), e((m)));
  baz <- + 'a';
}
  c <- + '\'';
  main(i, (e(g(- '7', - 'a'))), - (((y(+ 5, d)) * l)));
}
  {

}
}
  y['\n'] <- ('a' + 42);
}
}
  return (31 div '\n');
  bar['7']['a'] <- (40);
}

fun i() : nothing
fun x(j, c, z : int[13]; ref i, g : int[][23]) : char
fun baz() : nothing;
fun l() : char
fun i() : int
fun b(k, boo : char[][35]; ref e, n : char[][11]; f : int; ref d, h, z : char; ref bar, z : int[37]) : char;
fun b(ref m, m : int[11]; ref c, f : char[42][1]; j, g : char[13]; d, e : char[][27]) : int

{
  while 'a' # 24 do return;
  d(i(((('a' - '\'')) mod (('a')))));
  return e(+ 30, + 15);
  return;
}

fun g(ref a : char[][11]; ref k, f : int[]; ref e : int[]; ref x, bar : char[36]; ref x : int) : char;

{
  while 'a' # '\n' do ;
  ;
}


{
  if 12 = 40 then {
  if 'a' = '\n' then if 19 # 9 then j(); else a();
  ;
}
  if '7' > 7 then bar(('\''), - '7'); else k();
  ;
  ;
}

fun y(ref f, z, main : char[31]; n : int[6]; ref b, b : int) : char
var g : char[1];
fun m() : char;

{
  x();
  ;
  z();
  ;
  {
  if 22 # 27 then ; else ;
  m['7'] <- h;
}
}


{
  if '\n' >= '\'' then l(('\n' + 'a'), b((37), + '7'));
  b <- (29 + '7');
}

var j : int[37];

{
  {
  "bar" <- h(boo[39]);
  while 17 <= 19 do ;
  if 18 < '\n' then f(+ 'a', f, d);
  {
  if 12 >= 16 then z <- 14; else ;
  if '\n' >= '7' then j(x, f, i[10]);
}
  if 33 >= '7' then while 16 >= 39 do f <- '\''; else ;
}
  ;
  return j(n(('7' div 20), "Name:\t\"DouglasAdams\"\nValue:\t42\n"), baz(- 25, (19)), d);
  if 40 >= '\n' then baz <- 38; else b <- '\'';
  b <- foo;
}


{
  if 21 >= 27 then ; else if '7' # '\'' then d('a'); else h <- 2;
  {
  {
  ;
}
  return;
  while '\n' # '\'' do return '7';
  {
  "foo" <- b(f);
  ;
}
  return;
}
  return "foo";
}

fun j(ref boo, d : int[8]) : char

{

}


{
  z <- - 30;
}


{
  f <- n;
  n <- (21 div '7');
  ;
  m <- ('\n' mod 36);
  if 'a' >= '\n' then foo <- 10;
}


{
  {
  i <- (35);
}
  j((('\'')), k, - "foo");
}

fun y(ref n, a : char[][23]; m, boo : char; ref a, d, g : char[]; ref c : char[]) : int
fun g(ref c : int[42]; j, m, i : char[19][32]) : int

{
  ;
  {
  foo <- - '7';
  ;
  g(c(boo(j[+ '\n']), b(((39 div 3)), - h)), bar(+ y), - ((- '7')));
}
  while 'a' # 0 do ;
}


{
  foo <- c();
  if '\n' < 37 then ;
  while '\'' > '\n' do {
  while '\n' # 0 do return;
  ;
  ;
}
  main <- (39);
  ;
}

fun x(ref x : int[]; ref h, a, y : char[1]; ref boo : char; foo : char[29][29]) : int
fun x(g : char[]; b : char[30]) : nothing;

{
  g(((6 * 22)), ((y()) div d), (g));
  baz <- - 31;
  boo(m());
  {
  while '7' <= '\'' do {
  ;
  m(foo, ((('7' * 28)) div (- '\n')));
  {
  g(e);
  return - 'a';
  return;
}
}
  while 19 > 'a' do {
  g <- m;
  return (7);
  d <- a;
  {
  if 29 >= 37 then {

}
  return;
  ;
  {
  if 17 # 20 then while 15 = 37 do ;
  return;
  ;
}
}
  ;
}
  foo <- + '\n';
}
  boo <- - 'a';
}


{
  if '\n' <= '\'' then return 42; else while '\'' = '\'' do if 34 < '7' then return; else return;
  return;
  c(boo);
  f <- (39);
}


{
  n['\''] <- (42 + '\'');
}


{

}


{
  return;
  return (6 * 12);
  if 14 < '\'' then b();
}

var k : int[8];

{
  {
  m("Route66", ("foo" * ((22 + 11))), + (((l()) * ((32 * 36)))));
}
  return;
  {
  if 16 >= 33 then return; else while 12 < 26 do if 0 <= 'a' then if '\'' >= '\'' then b <- 'a'; else while 2 <= 10 do return '7';
  while 6 > '7' do return 5;
  x("bar"[0][(30)], - (+ (('a' mod '\''))));
  ;
  while 24 # 2 do baz();
}
  return;
  ;
}

fun boo(b, h, boo : char[]; ref k, baz : char[][22]; j : char[][21]; ref x : char; ref foo : char[][22][2]) : nothing

{
  d(f(b()), (c - ((7))), boo((foo)));
  return h();
}


{

}
