fun n(l : int[][10]; baz, j : char[][32]) : nothing
fun h(ref j, m : int[]; j, c, h : char[]; ref foo : char[]) : int
fun a(ref a, m, b : char; ref m : char; j : int[][30][6]) : char

{
  z <- f(('\n'), boo(k(i((8 * '\''), k), (32 * 'a')), (24 - '\n'), baz()));
}

fun main(ref a, f, h : char[41]; ref g, l : int[][41]; ref h : int[]; ref foo, baz : char[17]) : char
fun a(y, boo : int[]; baz, baz : char[]) : nothing
fun c(baz, n : char; ref main, y, g : int; i : int) : int

{
  if '7' > 10 then if 25 > 41 then {
  {
  ;
}
  while '7' >= '\n' do if 29 <= 10 then "bar" <- 33; else return 21;
  while 33 # '\'' do "Route66" <- 2;
  {

}
} else {
  "foo" <- - 'a';
  boo(foo(), ((- 35) - (('\n'))));
  return;
} else return 11;
  if '\n' <= '\'' then ; else if '\n' > 11 then a(); else if 8 > 8 then ;
  while 12 <= '\'' do return 25;
}


{

}

fun f(ref h, foo, j : char; g, x, i : char[]; ref c : int; main : char[]) : nothing
fun l(ref j : int[]; g, baz : char[][11]; ref f : int) : char
fun g(bar, y : int[]; ref y, baz, baz : char[]; ref f, d : char[]; ref x, e, l : int[][22]; ref c : int) : nothing
fun g(ref x, e : char[]; ref z : char[]) : nothing
fun y(n, m, n : char[]; x, main : char) : int
fun y(g, k : char[32]; ref boo, foo, k : int[38]; foo, a : int; m, a, x : int[][21]) : int;
var c, main : int[1][42];
fun j(d, i, h : int; ref e : char[]; ref x, n : int[16][39]; d, x : char) : nothing

{
  {
  return i((11), (24));
  ;
  while '7' <= 18 do ;
  if 8 > 4 then bar(c(c, x(bar(m((22 * 15), ('a' * 34)), ('a' mod 'a'))))); else if 17 >= '\n' then {

}
}
  ;
}


{
  ;
  return;
  ;
  if '\'' < 14 then if '\'' > 15 then l('\''); else ;
  return;
}

fun g(k : int[39]; ref boo, l, bar : int; f, k : int; ref m, b, j : char[]) : nothing

{
  ;
  if '\'' <= '\'' then return '\n';
  if 25 > 28 then if 25 = 23 then {
  {
  a <- ('a' div 18);
  return;
  while '\n' = 33 do {
  while 27 >= 42 do return 40;
  "bar" <- (15);
  if 'a' = '7' then while '\n' > 22 do while 42 # 6 do ; else return;
  return ('\'');
}
  {
  e <- x;
  if '7' = '\'' then ;
  ;
  {

}
}
}
  return;
  "foo" <- z(('a'));
} else a <- 14; else b <- '\'';
}


{
  if '\'' = '7' then while '\'' < '\'' do if '7' >= 32 then return; else while '\'' < 23 do while '\n' = 'a' do return;
  ;
  {
  if '\n' # 29 then i <- 40;
  baz(boo((((2 mod 10)) - (i(('7')))), (('a' + 3)), (k div (- 19))), ((- 39) div (- 40)), y(((- '7') mod (('\'' mod 33))), ((main(i, (38))) + ((25 * 11))), "bar"));
  return (33 + 'a');
}
  return - '7';
  while 22 # '\'' do if '7' > 'a' then return; else return 'a';
}


{
  if '\n' >= 4 then while 'a' <= '\n' do if 0 < '7' then boo('7');
  return ('\'');
}

fun f(g : int[]; ref g, h : char[]) : nothing
var l, a, foo : char[20];
fun bar(k, i : int; ref main : char[]; ref x, a, boo : int[][33]; ref e, main : char; j, bar : int[][27]) : nothing;
fun baz(ref b, e : char; ref y, i, i : int[]; ref y, j : int[26]; ref c : int[]) : char
fun bar(i : char[][23]; ref boo, h : int; main : int[][22]; ref e, h : char; e, c, n : char[]) : int
fun x(l, d, e : int[]; ref main, h, bar : char[][32]) : char
var baz, b : int;

{
  bar(bar);
  return;
  while 'a' <= '\n' do if 30 = '\'' then {
  e((b(- 42)), g(((- '\n') + ((22))), boo(((+ '\'') mod f), - i, g((("Name:\t\"DouglasAdams\"\nValue:\t42\n"[39]) - ((32))), (g - (- 23)), + (((- 'a') + (('7' - 'a')))))), d(y)), "bar");
  if 16 # 11 then if 11 > '7' then {
  ;
  f();
  ;
  if 14 # 15 then while 38 # '7' do while 7 < '\n' do foo('\n'); else ;
  "Route66" <- m;
}
} else a('\n', 29);
}

fun h(ref c, f : int[]; h, g : int; j : int[]; i : int[][29]) : nothing

{
  {
  z(((m()) mod (+ 23)), x[(2)], "Name:\t\"DouglasAdams\"\nValue:\t42\n");
  ;
}
  if '\n' # '\n' then foo((12 + 42));
}

fun boo(h, m : int) : nothing;

{
  while 38 < '7' do return;
  m <- k;
  d((('\'')), foo(), - (+ ("bar"[16])));
  {
  ;
  b <- h;
}
}

fun f(ref c, a, l : char[]; b : int[22]; ref i, k, d : char[6][26]; ref g : int[]) : int

{
  ;
  l <- d(l, + 'a', (38));
  x();
}


{
  "Route66"[35] <- b[9];
  f(+ (boo(y(), ((('\n')) * bar), ((('a')) * (- '7')))), l);
  if 4 <= '7' then while '\'' < 'a' do "bar" <- '7';
  {

}
  ;
}


{
  return b((19));
  while '\'' >= 11 do while 'a' >= '\'' do if 7 # 'a' then f('a'); else ;
  ;
}

fun n(ref a : int[][14]) : nothing;

{
  {
  while '\n' < '7' do ;
  ;
  if 4 = 39 then while '\n' < 36 do d('\''); else ;
  ;
  return + 35;
}
  n <- ('\'');
}

fun k(c, boo, f : char[39]; ref l, h, b : char[][7]; m, d : int) : nothing

{

}


{
  y((((17)) mod n));
  if '7' <= '\n' then ; else n(a(('7'), - '\n'));
  k <- "foo";
  if 9 >= '\'' then {
  y[35] <- ('\n');
}
  ;
}


{

}

fun b() : char
fun x() : nothing
fun m(main : int[]; ref m, b : int[40]; foo, n, g : int[12]) : int
var d : char;
fun g(z, f, i : int[][18]; ref f, z : char[]; ref d, c, m : int[21]; a, a, l : char[42]; bar, g, c : char[6]) : char;
fun k(l, y : char[]; b, x : int[16]; ref x, l, baz : int; ref a : char[12]) : nothing
fun i(d, g : char[]) : int
fun d(n : char[]; m, a, g : int[][12]; y, n, n : char[]) : int

{

}


{
  while '\n' <= 21 do if '7' >= 3 then ;
}

fun a(j, b : char; ref boo : char) : int
fun h(y : int[]; bar, e : char[]; h : char; ref j, i, n : char; ref g, f : char[]) : nothing
var z, main, f : char;
var m, k : int;
fun f(boo, n, d : char; f, e, main : char; baz : int) : nothing

{
  {
  while 'a' >= '\n' do if 'a' > '\'' then while '\n' >= 'a' do b <- 9; else while '7' < '\n' do ;
  f(c, (k), f());
}
  ;
  if 29 = 39 then {
  return k();
  n <- ('\'');
} else main(e(x, ('7' div '\''), ('\n' - 38)), ('\n' * 11));
  return bar((16 * 4), ('a'), - '\'');
}


{
  while 30 < 17 do y <- 'a';
}

fun l(c, l : char[]; g, bar, x : int[][29]; l, n : int[]; ref h, c : int[][12][8]; x : char[][36]) : char;

{
  if 39 = 2 then if '\'' # '7' then {
  ;
  ;
  while 5 < 29 do h();
} else d(33, '\'', 20);
  ;
  while 1 > 41 do "bar" <- 4;
}

fun boo(x, i, h : char[39][0]; ref boo, g : char; ref a, g : int; k, k, x : char[]; bar, foo : int[]) : nothing
var c : int[32];
var m : int;
fun foo(ref k : int[29]; ref e, f : int; x : int[23]) : nothing
fun m() : int
fun e(ref h, k : int; l, y, bar : char[18]; e : char; x : char[]; i, g : int[27][5]) : char

{
  a <- e(+ 0);
  ;
}

fun c(boo, h, h : int[][6]; ref z, baz : int; ref main, c : char[]) : int

{

}


{
  ;
  {
  {
  "Name:\t\"DouglasAdams\"\nValue:\t42\n" <- + 21;
}
}
  if 16 <= 'a' then "bar"['a'] <- 1; else while 'a' > 41 do while '7' > '\'' do if 21 <= 35 then while 26 > 6 do while '\'' = 36 do c(35, '\'', '\'');
}


{
  z <- m(+ 16);
  {
  foo['a'] <- ('7' div '7');
  ;
  return ('7');
  if '\n' > 2 then if '\n' > 20 then return; else n(y, - '\'', c());
  if 'a' = 0 then return '7'; else return;
}
  if 31 >= 29 then while 29 > 'a' do c();
  ;
  n <- + '7';
}


{
  x[37] <- (10 mod 30);
  while '\n' <= 30 do return 40;
}


{
  ;
  ;
  while 14 # 31 do m <- 12;
}


{
  ;
  return;
}

fun b(ref z, a : int) : char
fun x(boo, bar : int; e, l : char[30]; a, b : int[0][42]) : int
var h : int;
fun d() : nothing;
fun y(ref d, x : int[]; a : char[]; foo, main, d : char[][17]) : char;

{
  return;
  return;
  x("Route66"[('7' + '\n')], m);
  return;
}

fun c(d, a : int[][7]; ref foo : int[36]; x : char) : nothing;
fun foo(ref e, k, b : int[][22][1]; ref f, x : char[][12]; ref b : int[][29]) : nothing
fun a(baz : int; ref a : char[35]) : nothing

{
  if 34 > 8 then return '\'';
  a <- - 7;
  bar();
  if 19 < '\'' then while 10 # 17 do ; else while 13 >= 'a' do ;
  ;
}

fun m() : nothing;

{
  while 'a' = 'a' do while 14 <= '7' do {
  while '\n' = 'a' do ;
}
  if '\n' <= 10 then k((28 div '7')); else if 8 # 'a' then ; else return;
  while 'a' # 12 do if 34 >= '\n' then c <- 27;
}


{

}

fun main(f : char[][6][25]; ref j : char[][12]; ref x : int; ref boo : char) : char
fun y() : int
fun z(ref f : int; foo, c, z : char[][19][37]; ref j : char[2][8]; i, baz : int[][13]) : char
fun b(boo, f : int[]; g, f, baz : char[7]; b, bar : int[]) : nothing

{
  m <- ('a' - '\n');
  while 37 # '7' do ;
  n(z, - ((- 8)));
  return ('\'');
  if 'a' = 3 then g(('\n' + 2), - 4);
}


{
  while 'a' < '\n' do return '\n';
  if 12 = 'a' then return;
}

fun d(ref l : char[9][22]; a : char[]; ref a : int[1]) : nothing;

{
  ;
  if '\'' <= '7' then {

}
  ;
  if 37 = 'a' then ;
}


{
  return;
}


{
  ;
}


{
  {
  ;
  n(g(+ (((+ '\n') div ((11)))), ((('\'')) - ((40))), main[(19)]));
  ;
  while 'a' # 24 do ;
}
  d(foo(i("bar", (a((38 mod 28), (41 div 25))), e)));
}


{

}

fun z(i, foo, g : int; ref k, j, j : int[35]) : int;
var b, a : char[32];

{
  ;
  x(foo((e), (+ '7'), - (+ (('7')))), bar());
  if 4 # 17 then "bar" <- 3;
  if 37 <= 4 then d();
}
